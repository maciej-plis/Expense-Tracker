post:
  summary: Add new purchase
  tags: [ purchases ]
  operationId: addPurchase
  requestBody:
    description: Request containing new purchase to be added
    required: true
    content:
      application/json:
        schema:
          $ref: '../../schemas/purchases/AddEditPurchaseRequest.yaml'
  responses:
    200:
      description: (OK) Success response containing added purchase
      content:
        application/json:
          schema:
            $ref: '../../schemas/purchases/PurchaseDto.yaml'
    400:
      description: (BAD_REQUEST) Failure response when request body is invalid
      content:
        application/json:
          schema:
            $ref: '../../schemas/common/ValidationError.yaml'
get:
  summary: Get purchases
  tags: [ purchases ]
  operationId: getPurchases
  responses:
    200:
      description: (OK) Success response containing purchases
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '../../schemas/purchases/PurchaseDto.yaml'
delete:
  summary: Delete multiple purchases
  tags: [ purchases ]
  operationId: removePurchases
  requestBody:
    description: Request containing ids of purchases to be deleted
    required: true
    content:
      application/json:
        schema:
          $ref: '../../schemas/common/BulkDeleteRequest.yaml'
  responses:
    204:
      description: (NO_CONTENT) Success response