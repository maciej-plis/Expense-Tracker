get:
  summary: Get purchase by id
  tags: [ purchases ]
  operationId: getPurchase
  parameters:
    - $ref: "./../../components/parameters/purchases/PurchaseId.yaml"
  responses:
    200:
      description: Success response containing purchase
      content:
        application/json:
          schema:
            $ref: "./../../components/schemas/purchases/PurchaseDTO.yaml"
    404:
      $ref: "./../../components/responses/common/NotFoundResponse.yaml"

put:
  summary: Update purchase by id
  tags: [ purchases ]
  operationId: updatePurchase
  parameters:
    - $ref: "./../../components/parameters/purchases/PurchaseId.yaml"
  requestBody:
    description: Request with purchase update
    required: true
    content:
      application/json:
        schema:
          $ref: "./../../components/schemas/purchases/UpdatePurchaseRequest.yaml"
  responses:
    204:
      $ref: "./../../components/responses/common/NoContentResponse.yaml"
    400:
      $ref: "./../../components/responses/common/ValidationErrorResponse.yaml"
    404:
      $ref: "./../../components/responses/common/NotFoundResponse.yaml"

delete:
  summary: Remove purchase by id
  tags: [ purchases ]
  operationId: removePurchase
  parameters:
    - $ref: "./../../components/parameters/purchases/PurchaseId.yaml"
  responses:
    204:
      $ref: "./../../components/responses/common/NoContentResponse.yaml"
    404:
      $ref: "./../../components/responses/common/NotFoundResponse.yaml"
